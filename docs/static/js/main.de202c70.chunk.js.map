{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iNAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAAAC,GACjBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACG,uBACKO,KAAK,OACLC,MAAST,EACTU,SAjBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAWH,GAD9C,wFAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,8BAAIA,EAAJ,WCHCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECFwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAKtB,CAACpB,IAEGqB,EDlBwBI,CAAazB,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,WAAf,SAEYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAESA,GADAA,EAAIC,aEoB1Be,EA/BM,WACjB,MAAoCxC,mBAAS,CAAC,gBAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAUA,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAiBA,IAG9B,6BACK0C,EAAWlB,KAAI,SAAAT,GAAQ,OAEpB,aADA,CACE,EAAF,CAEIA,SAAYA,GADPA,YCxB7B4B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.de202c70.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n           <input \r\n                type='text'\r\n                value = {inputValue}\r\n                onChange = {handleInputValue }\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category)}&limit=5&offset=0&rating=g&lang=en&api_key=X3f821sKnWt3stKgyhEagIKBKlFYjzUy`;\r\n    const resp = await fetch(url);\r\n\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            \r\n            <div className=\"cardGrid\">\r\n                    {\r\n                        images.map(img => (\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                { ...img } \r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\nimport {getGifs} from '../Helpers/getGifs.js'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n        getGifs(category)\r\n            .then(img => {\r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                })\r\n            });\r\n\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport {GifGrid } from './Components/GifGrid'\r\n\r\n//const categories = ['Dragon Ball', 'Naruto', 'Saint Seiya'];\r\n\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Dragon Ball'])\r\n    \r\n    // const handleAdd = () => {\r\n    //     //setCategories([...categories, 'Captain Tsubasa']);\r\n    //     setCategories(cats => [...cats, 'Captain Tsubasa']);\r\n    //     //console.log(categories);\r\n    // };\r\n    \r\n\r\n    //console.log(categories);\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>    \r\n                {categories.map(category => \r\n                    // <li key={category}>{category}</li>\r\n                    < GifGrid \r\n                        key={category} \r\n                        category = {category}\r\n                    />\r\n                )}\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <GifExpertApp />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}